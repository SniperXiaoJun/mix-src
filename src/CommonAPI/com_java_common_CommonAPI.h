/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_java_common_sm2func */

#ifndef _Included_com_java_common_sm2func
#define _Included_com_java_common_sm2func
#ifdef __cplusplus
extern "C" {
#endif


JNIEXPORT jint Java_com_java_common_CommonAPI_PCIOpen
	(JNIEnv *, jclass);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIClose
	(JNIEnv * env, jclass classObj);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCILogin
	(JNIEnv *, jclass, jbyteArray, jint);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCILogout
	(JNIEnv *, jclass, jint);

JNIEXPORT jint Java_com_java_common_CommonAPI_GetLassErrorNumber
	(JNIEnv * env, jclass);

JNIEXPORT jint Java_com_java_common_CommonAPI_GetPasswordRetry
	(JNIEnv * env, jclass);

// 导出数字信封 数字信封转换
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_PCIRestoreExportSM2EnvelopedKey
	(JNIEnv * env, jclass classObj, jbyteArray byteArrayEPK, jbyteArray byteArrayIPKEnvlopedKeyBlob);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_PCIGenExportSM2EnvelopedKey
	(JNIEnv * env, jclass classObj, jbyteArray byteArrayEPK);

// 检测根密钥存在
JNIEXPORT jint Java_com_java_common_CommonAPI_PCICheckExistRootSM2Keys
	(JNIEnv * env, jclass classObj);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCICheckNotExistRootSM2Keys
	(JNIEnv * env, jclass classObj);

// 生成并导出密钥
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_PCIGenExportSM2Keys
	(JNIEnv * env, jclass classObj);

// 生成根密钥
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIGenRootSM2Keys
	(JNIEnv * env, jclass classObj);

// 备份根密钥
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIBackupInit
	(JNIEnv * env, jclass classObj);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIBackupKeyComponent
	(JNIEnv * env, jclass classObj, jint ulNumber,jbyteArray, jint);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIBackupFinal
	(JNIEnv * env, jclass classObj);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_PCIBackupRootSM2Keys
	(JNIEnv * env, jclass classObj);

// 恢复根密钥 
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIRestoreInit
	(JNIEnv * env, jclass classObj);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIRestoreKeyComponent
	(JNIEnv * env, jclass classObj,jbyteArray, jint);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIRestoreFinal
	(JNIEnv * env, jclass classObj);
JNIEXPORT jint Java_com_java_common_CommonAPI_PCIRestoreRootSM2Keys
	(JNIEnv * env, jclass classObj,jbyteArray byteArrayRootSM2Keys, jint ulRootSM2KeysLen);


// OpenSSL 接口生成证书和吊销列表证书请求，根证书
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OpenSSLSM2GenCSRWithPubkey
	(JNIEnv * env, jclass classObj, jobject objUserInfo ,jbyteArray byteArraySM2Keys);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OpenSSLSM2GenRootCert
	(JNIEnv * env, jclass classObj, jbyteArray byteArrayCSR, jbyteArray byteArraySN, jint ulSNLen, jint ulDATE);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OpenSSLSM2GenCRL
	(JNIEnv *env, jobject classObj,jobjectArray objArray, jbyteArray byteArrayX509Cert, jint ulX509CertLen);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OpenSSLSM2GenCert
	(JNIEnv * env, jclass classObj,
	jbyteArray byteArrayRootCert, jbyteArray byteArrayCSR, 
	jbyteArray byteArraySN, jint ulSNLen, 
	jint ulDATE,jint ulTypeSignEncrypt);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OpenSSLSM2GenCertEX(
	JNIEnv * env, jclass classObj,
	jbyteArray byteArrayRootCert, jbyteArray byteArrayPublicKey, jbyteArray byteArrayCSR, 
	jbyteArray byteArraySN, jint ulSNLen, 
	jint ulDATE, jint ulTypeSignEncrypt);

// OpenSSL PCI 签名证书和证书吊销列表
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OPFSM2SignCert
	(JNIEnv * env, jclass classObj, jbyteArray byteArrayX509Cert);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_OPFSM2SignCRL
	(JNIEnv * env, jclass classObj, jbyteArray byteArrayCRL,jbyteArray byteArrayX509Cert, jint ulX509CertLen);

// B64编码解码
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_Base64Encode
	(JNIEnv * env, jclass classObj,jbyteArray byteArrayIN, jint ulINLen);
JNIEXPORT jbyteArray Java_com_java_common_CommonAPI_Base64Decode
	(JNIEnv * env, jclass classObj,jbyteArray byteArrayIN, jint ulINLen);

JNIEXPORT jint Java_com_java_common_CommonAPI_OpenSSLVerifyValidCodeSign
	(JNIEnv * env, jobject objclass, 
	jbyteArray byteArrayValidCode, jint ulValidCodeLen, /*验证码*/
	jbyteArray byteArrayPublicKey, jint ulPublicKeyLen, /*公钥*/
	jbyteArray byteArraySig, jint ulSigLen				/*签名值*/
	);


#ifdef __cplusplus
}
#endif
#endif
